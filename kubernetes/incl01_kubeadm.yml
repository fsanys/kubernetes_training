- name: Launch the new EC2 Instance
  ec2:
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    group: "{{ security_group }}"
    wait: true
    instance_type: "{{ instance_type }}"
    group: "{{ security_group }}_{{ name }}"
    user_data: |
           #!/bin/sh
           sudo apt -y update
           sudo apt install -y python-minimal
    image: "{{ image }}"
    keypair: "key_{{ name }}"
  register: ec2

- name: sleep for 60 seconds and continue with play
  wait_for: timeout=60
  delegate_to: localhost

- name: Add IP address of all hosts to all hosts
  lineinfile:
    path: "./hosts_{{name}}"
    insertafter: '^\[master\]'
    line: "{{ec2.public_ip }} ansible_connection=ssh ansible_ssh_private_key_file=keys/key_{{name}}.pem ansible_user=ubuntu"
  with_items: "{{ec2.instances}}"
  when: node.value.master 
  loop_control:
    loop_var: ec2

- name: Add the newly created host so that we can further contact it
  add_host:
    name: "{{ ec2.public_ip }}"
    ansible_user: ubuntu
    ansible_ssh_private_key_file: "keys/key_{{name}}.pem"
    groups: master
  with_items: "{{ ec2.instances }}"
  when: node.value.master
  loop_control:
     loop_var: ec2

- name: Add IP address of all hosts to all hosts
  lineinfile:
    path: "./hosts_{{name}}"
    insertafter: '^\[worker\]'
    line: "{{ec2.public_ip }} ansible_connection=ssh ansible_ssh_private_key_file=keys/key_{{name}}.pem ansible_user=ubuntu"
  with_items: "{{ec2.instances}}"
  when: node.value.worker
  loop_control:
    loop_var: ec2

- name: Add the newly created host so that we can further contact it
  add_host:
    name: "{{ ec2.public_ip }}"
    ansible_user: ubuntu
    ansible_ssh_private_key_file: "keys/key_{{name}}.pem"
    groups: worker
  with_items: "{{ ec2.instances }}"
  when: node.value.worker
  loop_control:
     loop_var: ec2


- name: Add tag to Instance(s)
  ec2_tag:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    resource: "{{ item.id }}"
    region: "{{ aws_region }}"
    state: "present"
  with_items: "{{ ec2.instances }}"
  args:
    tags:
      Type: master

- name: Wait for SSH to come up
  wait_for:
    host: "{{ item.public_ip }}"
    port: 22
    state: started
  with_items: "{{ ec2.instances }}"

